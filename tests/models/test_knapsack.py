import pytest
import torch

from src.simulated_bifurcation.models import knapsack

from ..test_utils import DEVICES


@pytest.mark.parametrize("device", DEVICES)
def test_quadratic_model_conversion(device: torch.device):
    weights = [14, 2, 5, 3, 6]
    costs = [10.0, 6.0, 7.0, 1.0, 3.0]
    max_weight = 12

    model = knapsack(costs, weights, max_weight)

    quadratic_polynomial = model._as_quadratic_polynomial(
        dtype=torch.float32, device=device
    )

    assert torch.equal(
        torch.tensor(
            [
                [
                    5488.0,
                    784.0,
                    1960.0,
                    1176.0,
                    2352.0,
                    0.0,
                    -392.0,
                    -784.0,
                    -1176.0,
                    -1568.0,
                    -1960.0,
                    -2352.0,
                    -2744.0,
                    -3136.0,
                    -3528.0,
                    -3920.0,
                    -4312.0,
                    -4704.0,
                ],
                [
                    784.0,
                    112.0,
                    280.0,
                    168.0,
                    336.0,
                    0.0,
                    -56.0,
                    -112.0,
                    -168.0,
                    -224.0,
                    -280.0,
                    -336.0,
                    -392.0,
                    -448.0,
                    -504.0,
                    -560.0,
                    -616.0,
                    -672.0,
                ],
                [
                    1960.0,
                    280.0,
                    700.0,
                    420.0,
                    840.0,
                    0.0,
                    -140.0,
                    -280.0,
                    -420.0,
                    -560.0,
                    -700.0,
                    -840.0,
                    -980.0,
                    -1120.0,
                    -1260.0,
                    -1400.0,
                    -1540.0,
                    -1680.0,
                ],
                [
                    1176.0,
                    168.0,
                    420.0,
                    252.0,
                    504.0,
                    0.0,
                    -84.0,
                    -168.0,
                    -252.0,
                    -336.0,
                    -420.0,
                    -504.0,
                    -588.0,
                    -672.0,
                    -756.0,
                    -840.0,
                    -924.0,
                    -1008.0,
                ],
                [
                    2352.0,
                    336.0,
                    840.0,
                    504.0,
                    1008.0,
                    0.0,
                    -168.0,
                    -336.0,
                    -504.0,
                    -672.0,
                    -840.0,
                    -1008.0,
                    -1176.0,
                    -1344.0,
                    -1512.0,
                    -1680.0,
                    -1848.0,
                    -2016.0,
                ],
                [
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                    1204.0,
                    1204.0,
                    1204.0,
                    1204.0,
                    1204.0,
                    1204.0,
                    1204.0,
                    1204.0,
                    1204.0,
                    1204.0,
                    1204.0,
                    1204.0,
                    1204.0,
                ],
                [
                    -392.0,
                    -56.0,
                    -140.0,
                    -84.0,
                    -168.0,
                    1204.0,
                    1232.0,
                    1260.0,
                    1288.0,
                    1316.0,
                    1344.0,
                    1372.0,
                    1400.0,
                    1428.0,
                    1456.0,
                    1484.0,
                    1512.0,
                    1540.0,
                ],
                [
                    -784.0,
                    -112.0,
                    -280.0,
                    -168.0,
                    -336.0,
                    1204.0,
                    1260.0,
                    1316.0,
                    1372.0,
                    1428.0,
                    1484.0,
                    1540.0,
                    1596.0,
                    1652.0,
                    1708.0,
                    1764.0,
                    1820.0,
                    1876.0,
                ],
                [
                    -1176.0,
                    -168.0,
                    -420.0,
                    -252.0,
                    -504.0,
                    1204.0,
                    1288.0,
                    1372.0,
                    1456.0,
                    1540.0,
                    1624.0,
                    1708.0,
                    1792.0,
                    1876.0,
                    1960.0,
                    2044.0,
                    2128.0,
                    2212.0,
                ],
                [
                    -1568.0,
                    -224.0,
                    -560.0,
                    -336.0,
                    -672.0,
                    1204.0,
                    1316.0,
                    1428.0,
                    1540.0,
                    1652.0,
                    1764.0,
                    1876.0,
                    1988.0,
                    2100.0,
                    2212.0,
                    2324.0,
                    2436.0,
                    2548.0,
                ],
                [
                    -1960.0,
                    -280.0,
                    -700.0,
                    -420.0,
                    -840.0,
                    1204.0,
                    1344.0,
                    1484.0,
                    1624.0,
                    1764.0,
                    1904.0,
                    2044.0,
                    2184.0,
                    2324.0,
                    2464.0,
                    2604.0,
                    2744.0,
                    2884.0,
                ],
                [
                    -2352.0,
                    -336.0,
                    -840.0,
                    -504.0,
                    -1008.0,
                    1204.0,
                    1372.0,
                    1540.0,
                    1708.0,
                    1876.0,
                    2044.0,
                    2212.0,
                    2380.0,
                    2548.0,
                    2716.0,
                    2884.0,
                    3052.0,
                    3220.0,
                ],
                [
                    -2744.0,
                    -392.0,
                    -980.0,
                    -588.0,
                    -1176.0,
                    1204.0,
                    1400.0,
                    1596.0,
                    1792.0,
                    1988.0,
                    2184.0,
                    2380.0,
                    2576.0,
                    2772.0,
                    2968.0,
                    3164.0,
                    3360.0,
                    3556.0,
                ],
                [
                    -3136.0,
                    -448.0,
                    -1120.0,
                    -672.0,
                    -1344.0,
                    1204.0,
                    1428.0,
                    1652.0,
                    1876.0,
                    2100.0,
                    2324.0,
                    2548.0,
                    2772.0,
                    2996.0,
                    3220.0,
                    3444.0,
                    3668.0,
                    3892.0,
                ],
                [
                    -3528.0,
                    -504.0,
                    -1260.0,
                    -756.0,
                    -1512.0,
                    1204.0,
                    1456.0,
                    1708.0,
                    1960.0,
                    2212.0,
                    2464.0,
                    2716.0,
                    2968.0,
                    3220.0,
                    3472.0,
                    3724.0,
                    3976.0,
                    4228.0,
                ],
                [
                    -3920.0,
                    -560.0,
                    -1400.0,
                    -840.0,
                    -1680.0,
                    1204.0,
                    1484.0,
                    1764.0,
                    2044.0,
                    2324.0,
                    2604.0,
                    2884.0,
                    3164.0,
                    3444.0,
                    3724.0,
                    4004.0,
                    4284.0,
                    4564.0,
                ],
                [
                    -4312.0,
                    -616.0,
                    -1540.0,
                    -924.0,
                    -1848.0,
                    1204.0,
                    1512.0,
                    1820.0,
                    2128.0,
                    2436.0,
                    2744.0,
                    3052.0,
                    3360.0,
                    3668.0,
                    3976.0,
                    4284.0,
                    4592.0,
                    4900.0,
                ],
                [
                    -4704.0,
                    -672.0,
                    -1680.0,
                    -1008.0,
                    -2016.0,
                    1204.0,
                    1540.0,
                    1876.0,
                    2212.0,
                    2548.0,
                    2884.0,
                    3220.0,
                    3556.0,
                    3892.0,
                    4228.0,
                    4564.0,
                    4900.0,
                    5236.0,
                ],
            ],
            dtype=torch.float32,
            device=device,
        ),
        quadratic_polynomial.quadratic,
    )
    assert torch.equal(
        torch.tensor(
            [
                -10.0,
                -6.0,
                -7.0,
                -1.0,
                -3.0,
                -2408.0,
                -2408.0,
                -2408.0,
                -2408.0,
                -2408.0,
                -2408.0,
                -2408.0,
                -2408.0,
                -2408.0,
                -2408.0,
                -2408.0,
                -2408.0,
                -2408.0,
            ],
            dtype=torch.float32,
            device=device,
        ),
        quadratic_polynomial.linear,
    )
    assert torch.equal(
        torch.tensor(1204.0, dtype=torch.float32, device=device),
        quadratic_polynomial.bias,
    )

    # Solve and check result
    assert [1, 2, 3] == model.solve(
        mode="discrete", agents=2000, device=device, dtype=torch.float32
    )
