name: CI/CD

on:
  push:
    branches:
    - main
    - github-actions-test
    paths:
    - '**.py'
    - '.github/workflows/lint.yml'
  pull_request:
    branches:
      - main
    paths:
    - '**.py'
    - '.github/workflows/lint.yml'
    types:
      - opened
      - synchronize
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Code Style Check üé®
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.8

      - name: Install dependencies [pip]
        run: |
          python -m pip install --upgrade pip
          pip install black isort

      - name : Check Black
        run: |
          black . --check

      - name : Check Isort
        run: |
          isort --profile black --check .

  install:
    needs: lint
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macos-latest]
    name: Build package on ${{ matrix.os }} with Python ${{ matrix.python-version }} ‚öôÔ∏è
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-${{ matrix.python-version }}-

      - name: Install package [pip]
        run: |
          python -m pip install --upgrade pip
          pip install .[test]

      - name: Metadata check
        if: ${{ matrix.python-version == '3.8' && matrix.os == 'ubuntu-latest' }}
        run: |
          python .github/scripts/metadata_checker

  test:
    needs: install
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
        os: [ubuntu-latest, windows-latest, macos-latest]

    name: Run tests on ${{ matrix.os }} for Python ${{ matrix.python-version }} üß™
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Restore dependencies from cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('requirements.txt') }}

      - name: Run tests with Pytest
        run: |
          python -m coverage run -m pytest

      - name: Coverage
        if: ${{ matrix.python-version == '3.8' && matrix.os == 'ubuntu-latest' }}
        run: |
          python -m coverage report
          python -m coverage json

      - name: Upload coverage artifact
        if: ${{ matrix.python-version == '3.8' && matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.json

  upload-coverage:
    runs-on: ubuntu-latest
    needs: test
    name: Upload coverage report to Codecov üìä
    steps:
      - name: Download coverage report
        uses: actions/download-artifact@v4
        with:
          name: coverage-report

      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}


